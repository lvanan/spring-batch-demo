version: '3.8'

services:
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml --no-scrape.adjust-timestamps
    volumes:
      - ./src/main/resources/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    container_name: prometheus

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    command: [ "--config=/etc/otel-collector-config.yaml", "" ]
    volumes:
      - /Users/ivan/Documents/workspace/spring-batch-demo/src/main/resources/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "55681:55681"   # pprof extension
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OpenTelemetry Protocol gRPC receiver
      - "55679:55679" # zpages extension
      - "4318:4318"
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:13133"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring
    container_name: grafana

  postgres:
    image: postgres:17.2
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_pwd
      POSTGRES_DB: demo
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:latest
    container_name: mongo-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_pwd
      MONGO_INITDB_DATABASE: demo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_pwd
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

networks:
  monitoring:

volumes:
  postgres_data:
  mongo_data:
